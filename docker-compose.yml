services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python manage.py collectstatic --noinput &&
         python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
      - ./static:/code/static
      - ./media:/code/media
    environment:
      - DEBUG=True
      - PSQL_DB=django
      - PSQL_USER=django
      - PSQL_PASSWD=django
      - PSQL_HOST=postgres
    depends_on:
      - postgres
      - frontend
    expose:
      - "8000"  # Expuesto solo para la red interna, Nginx redirigir√° al contenedor
    networks:
      - app_network

  frontend:
    image: node:14
    command: sh -c "cd /code/front/assets && npm install && npm run build"
    volumes:
      - .:/code
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres_server
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      POSTGRES_DB: django
    volumes:
      - postgres_data_ramos_uc_legacy:/var/lib/postgresql/data
    expose:
      - "5432"  # Solo accesible dentro de la red de contenedores, no fuera
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"  # Puerto 8089 para el acceso externo
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - web
      - frontend
    networks:
      - app_network

volumes:
  postgres_data_ramos_uc_legacy:
    driver: local
networks:
  app_network:
    driver: bridge
